<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>
            The pluginwizard plugin allows to generate on the fly customized plugins in minutes.
        </title>
    </properties>
    <body>
        <section name="Plugin pluginwizard">
            <subsection name="Introduction">
                The primary goal of Lutece pluginwizard is to reduce developer configuration files overhead and
                the risk of infringing the development norms. Also new developers entering the project will inherit
                the best pratices directly in their project. A basic plugin can be conceived in some minutes and
                executed immediately. 
            </subsection>
            <subsection name="What do you get?">
                <p>
                    All the files needed to implement CRUD functionalities on defined business classes.
                    The files include :
                    <p>
                        <ol>
                            <li>The Project Object Model( i.e.<a href="http://maven.apache.org/guides/introduction/introduction-to-the-pom.html">pom.xml</a>)</li>
                            <li>The Java or Kotlin classes</li>
                            <li>The Spring framework context file</li>
                            <li>The sql file needed by the plugin</li>
                            <li>The Jsp files needed by Front and Back Office</li>
                            <li>Html templates needed by the view layer compatible with the chosen lutece core version</li>
                            <li>The properties files</li>
                            <li>The plugin xml definition needed by the Lutece core</li>
                            <li>Basic XSL for defined portlets</li>
                        </ol>
                    </p> 
          
                </p>
            </subsection>
            <subsection name="What are the Pros ans Cons?">
                <p>
                    <p>Pros</p>
                    <ul>
                        <li>The process is iterative, the back button allows to improve and stock the model.</li>
                        <li>The model is simple and easy to understand.</li>
                    </ul>
                    <p>Cons</p>
                    <p>The generation based upon a model which is datacentered doesn't imply that all plugins are based upon
                    business layers. There are a many mechanisms in Lutece which helps to comply to requirements. The mechanism
                    could be the daemons which are responsible to execute asynchronous tasks or Role Based Access Control which
                    offers the possibility to set up fine-grained control on declared resources.</p>
                </p>
            </subsection>
            <subsection name="Plugin conception">
                <p>
                    <strong>Simplified Requirements:</strong> 
                    <ul>
       
                        <li>Manage a list of persons.</li>
                        <li> An administrator must be able to modify,delete and update.</li>
                    </ul>
               
                    <strong>Possible Solution:</strong> 
                    <ul>
                        <li> Use the pluginwizard to attach an admin feature to the plugin.</li>
                        <li> Attach a business class to the admin feature.</li>
                        <li> The business class is comprised of some fields(id_person,person_name and person_address).</li>
                        <li> The id_person is the primary key and person_name is the description of the business object.</li>
                    </ul>
                </p>
            </subsection>
               
              
        </section>
    </body>
</document>
          
